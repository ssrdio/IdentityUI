@model ClientMenuViewModel


@await Component.InvokeAsync("ClientMenu", Model.ToMenuViewModel(ClientMenuViewComponent.TabSelected.Scopes))



<div class="tab-content form-card">
    <div class="main-card mb-3 card fullWidthCard">
        <div class="card-body">
            <div class="card-title-space">
                <h5 class="card-title">
                    Scopes
                </h5>
            </div>

            @await Component.InvokeAsync("DragAndDrop")

        </div>
    </div>
</div>

@section script {
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
    <script type="text/javascript" src="~/adminUI/app/js/components/dot-loader.js" asp-append-version="true"></script>
    <script type="text/javascript" src="~/adminUI/app/js/components/dragAndDrop/dragAndDrop.js" asp-append-version="true"></script>

    <script>
        $(document).ready(function () {
            new ClientScopes('@Model.Id');
        });

        class ClientScopes {
            constructor(id) {
                this.id = id;
                this.dragAndDropComponent = new DragAndDropComponent(
                    (itemId) => { this.removeScope(itemId) },
                    (itemId) => { this.addScope(itemId) },
                    "Available Scopes",
                    "Assigned Scopes"
                );
                this.get();
            }

            hideErrors() {
                this.dragAndDropComponent.hideErrors();
            }

            showScopes(data) {
                this.dragAndDropComponent.initAvailableItems(data.available);
                this.dragAndDropComponent.initAssignedItems(data.assigned);
                this.dragAndDropComponent.hideLoader();
            }

            get() {
                this.hideErrors();

                Api.get(`/api/IdentityAdmin/Client/GetScopes/${this.id}`)
                    .done((data) => {
                        this.showScopes(data);
                    })
                    .fail((response) => {
                        this.dragAndDropComponent.showErrors(response.responseJSON);
                        this.dragAndDropComponent.hideLoader();
                    });
            }

            addScope(itemId) {
                this.hideErrors();

                Api.post(`/api/IdentityAdmin/Client/AddScopes/${this.id}`, { scopes: [itemId] })
                    .done(() => {
                    })
                    .fail((response) => {
                        this.dragAndDropComponent.showErrors(response.responseJSON);
                    });
            }

            removeScope(itemId) {
                this.hideErrors();

                Api.post(`/api/IdentityAdmin/Client/RemoveScopes/${this.id}`, { scopes: [itemId] })
                    .done(() => {
                    })
                    .fail((response) => {
                        this.dragAndDropComponent.showErrors(response.responseJSON);
                    });
            }
        }
    </script>
}