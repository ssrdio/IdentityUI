@using SSRD.IdentityUI.Account.Areas.Account.Models.Manage.Menu;
@model SSRD.IdentityUI.Account.Areas.Account.Models.Manage.CredentailsViewModel

@{ SidebarSelection.SelectedOption = SidebarOptions.Credentials; }

@{ ViewData["Title"] = "Profile"; }

@await Component.InvokeAsync("IdentityStatusAlertRazor", new { Model.StatusAlert })

@if (Model.HasPassword)
{
<div class="main-card mb-3 col-xl-6 offset-xl-3 col-lg-12 card form-card">
    <div class="card-body">
        <div class="card-title-space">
            <h5 class="card-title">
                Change Password
            </h5>
        </div>
        <form asp-controller="Credentials" asp-action="ChangePassword" method="post" class="custom-form">
            <div class="form-group">
                <label class="control-label">Old Password</label>
                <input asp-for="OldPassword" type="password" class="form-control" />
                <span asp-validation-for="OldPassword" class="text-danger error-alert-custom"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Password</label>
                <input asp-for="NewPassword" type="password" class="form-control" />
                <span asp-validation-for="NewPassword" class="text-danger error-alert-custom"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Confirm Password</label>
                <input asp-for="ConfirmNewPassword" type="password" class="form-control" />
                <span asp-validation-for="ConfirmNewPassword" class="text-danger error-alert-custom"></span>
            </div>
            <div class="button-holder button-holder-remove-margin">
                <button type="submit" class="btn btn-primary custom-submit">Change</button>
            </div>
        </form>
    </div>
</div> }
            else
            {
<div class="main-card mb-3 col-xl-6 offset-xl-3 col-lg-12 card">
    <div class="card-body">
        <div class="card-title-space">
            <h5 class="card-title">
                Create password
            </h5>
        </div>
        <form asp-controller="Credentials" asp-action="CreatePassword" method="post" class="custom-form">
            <div class="form-group">
                <label class="control-label">Password</label>
                <input asp-for="NewPassword" type="password" class="form-control" />
                <span asp-validation-for="NewPassword" class="text-danger error-alert-custom"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Confirm Password</label>
                <input asp-for="ConfirmNewPassword" type="password" class="form-control" />
                <span asp-validation-for="ConfirmNewPassword" class="text-danger error-alert-custom"></span>
            </div>
            <div class="button-holder">
                <button type="submit" class="btn btn-primary custom-submit">Set password</button>
            </div>
        </form>
    </div>
</div>}

@if (Model.HasExternalLoginProvider)
{
<div class="main-card mb-3 col-xl-6 offset-xl-3 col-lg-12 card">
    <div class="card-body">
        <div class="card-title-space">
            <h5 class="card-title">
                External Login provider
            </h5>
        </div>
        <div class="custom-form">
            @if (Model.HasPassword)
            {
<span>
    You have setup an external login provider. Your external login provider is <b>@Model.ExternalLoginProvider</b>. If you wish to remove
    it, just click the button below.
</span>
                    <div class="button-holder">
                        <a class="mt-3 btn btn-danger custom-submit remove-button" href="@PagePath.REMOVE_EXTERNAL_PROVIDER">Delete provider</a>
                    </div> }
                                    else
                                    {
                    <span>
                        You have setup an external login provider. Your external login provider is <b>@Model.ExternalLoginProvider</b>. If you wish to remove
                        it, create password for the platform first.
                    </span>                }
        </div>
    </div>
</div>}